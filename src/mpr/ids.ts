interface FlagColumns {
  [key: number]: { bitMask: number; name: string };
}
/**
 * flag column ID bytes to the corresponding bitmask and name
 * As different from column IDs, flag column IDs don't need to be
 * modified when reading from MPT files, they are exactly the same.
 */
export const flagColumns: FlagColumns = {
  0x1: { bitMask: 0b00000011, name: 'mode' },
  0x2: { bitMask: 0b00000100, name: 'ox/red' },
  0x3: { bitMask: 0b00001000, name: 'error' },
  0x15: { bitMask: 0b00010000, name: 'control changes' },
  0x1f: { bitMask: 0b00100000, name: 'Ns changes' },
  0x41: { bitMask: 0b10000000, name: 'counter inc.' },
};

interface DataColumns {
  [columnId: number]: { dType: string; name: string; unit: string };
}
/**
 * data columns look-up table by Id
 */
export const dataColumns: DataColumns = {
  0x4: { dType: 'Float64', name: 'time', unit: 's' },
  0x5: { dType: 'Float32', name: 'control_V/I', unit: 'V/mA' },
  0x6: { dType: 'Float32', name: 'Ewe', unit: 'V' },
  0x7: { dType: 'Float64', name: 'dq', unit: 'mA·h' },
  0x8: { dType: 'Float32', name: 'I', unit: 'mA' },
  0x9: { dType: 'Float32', name: 'Ece', unit: 'V' },
  0xb: { dType: 'Float64', name: '<I>', unit: 'mA' },
  0xd: { dType: 'Float64', name: '(Q-Qo)', unit: 'mA·h' },
  0x10: { dType: 'Float32', name: 'Analog IN 1', unit: 'V' },
  0x11: { dType: 'Float32', name: 'Analog IN 2', unit: 'V' },
  0x13: { dType: 'Float32', name: 'control_V', unit: 'V' },
  0x14: { dType: 'Float32', name: 'control_I', unit: 'mA' },
  0x17: { dType: 'Float64', name: 'dQ', unit: 'mA·h' },
  0x18: { dType: 'Float64', name: 'cycle number', unit: '' },
  0x20: { dType: 'Float32', name: 'freq', unit: 'Hz' },
  0x21: { dType: 'Float32', name: '|Ewe|', unit: 'V' },
  0x22: { dType: 'Float32', name: '|I|', unit: 'A' },
  0x23: { dType: 'Float32', name: 'Phase(Z)', unit: 'deg' },
  0x24: { dType: 'Float32', name: '|Z|', unit: 'Ω' },
  0x25: { dType: 'Float32', name: 'Re(Z)', unit: 'Ω' },
  0x26: { dType: 'Float32', name: '-Im(Z)', unit: 'Ω' },
  0x27: { dType: 'Uint16', name: 'I Range', unit: '' },
  0x46: { dType: 'Float32', name: 'P', unit: 'W' },
  0x4a: { dType: 'Float64', name: 'Energy', unit: 'W·h' },
  0x4b: { dType: 'Float32', name: 'Analog OUT', unit: 'V' },
  0x4c: { dType: 'Float32', name: '<I>', unit: 'mA' },
  0x4d: { dType: 'Float32', name: '<Ewe>', unit: 'V' },
  0x4e: { dType: 'Float32', name: 'Cs⁻²', unit: 'µF⁻²' },
  0x60: { dType: 'Float32', name: '|Ece|', unit: 'V' },
  0x62: { dType: 'Float32', name: 'Phase(Zce)', unit: 'deg' },
  0x63: { dType: 'Float32', name: '|Zce|', unit: 'Ω' },
  0x64: { dType: 'Float32', name: 'Re(Zce)', unit: 'Ω' },
  0x65: { dType: 'Float32', name: '-Im(Zce)', unit: 'Ω' },
  0x7b: { dType: 'Float64', name: 'Energy charge', unit: 'W·h' },
  0x7c: { dType: 'Float64', name: 'Energy discharge', unit: 'W·h' },
  0x7d: { dType: 'Float64', name: 'Capacitance charge', unit: 'µF' },
  0x7e: { dType: 'Float64', name: 'Capacitance discharge', unit: 'µF' },
  0x83: { dType: 'Uint16', name: 'Ns', unit: '' },
  0xa3: { dType: 'Float32', name: '|Estack|', unit: 'V' },
  0xa8: { dType: 'Float32', name: 'Rcmp', unit: 'Ω' },
  0xa9: { dType: 'Float32', name: 'Cs', unit: 'µF' },
  0xac: { dType: 'Float32', name: 'Cp', unit: 'µF' },
  0xad: { dType: 'Float32', name: 'Cp⁻²', unit: 'µF⁻²' },
  0xae: { dType: 'Float32', name: '<Ewe>', unit: 'V' },
  0xf1: { dType: 'Float32', name: '|E1|', unit: 'V' },
  0xf2: { dType: 'Float32', name: '|E2|', unit: 'V' },
  0x10f: { dType: 'Float32', name: 'Phase(Z1)', unit: 'deg' },
  0x110: { dType: 'Float32', name: 'Phase(Z2)', unit: 'deg' },
  0x12d: { dType: 'Float32', name: '|Z1|', unit: 'Ω' },
  0x12e: { dType: 'Float32', name: '|Z2|', unit: 'Ω' },
  0x14b: { dType: 'Float32', name: 'Re(Z1)', unit: 'Ω' },
  0x14c: { dType: 'Float32', name: 'Re(Z2)', unit: 'Ω' },
  0x169: { dType: 'Float32', name: '-Im(Z1)', unit: 'Ω' },
  0x16a: { dType: 'Float32', name: '-Im(Z2)', unit: 'Ω' },
  0x187: { dType: 'Float32', name: '<E1>', unit: 'V' },
  0x188: { dType: 'Float32', name: '<E2>', unit: 'V' },
  0x1a6: { dType: 'Float32', name: 'Phase(Zstack)', unit: 'deg' },
  0x1a7: { dType: 'Float32', name: '|Zstack|', unit: 'Ω' },
  0x1a8: { dType: 'Float32', name: 'Re(Zstack)', unit: 'Ω' },
  0x1a9: { dType: 'Float32', name: '-Im(Zstack)', unit: 'Ω' },
  0x1aa: { dType: 'Float32', name: '<Estack>', unit: 'V' },
  0x1ae: { dType: 'Float32', name: 'Phase(Zwe-ce)', unit: 'deg' },
  0x1af: { dType: 'Float32', name: '|Zwe-ce|', unit: 'Ω' },
  0x1b0: { dType: 'Float32', name: 'Re(Zwe-ce)', unit: 'Ω' },
  0x1b1: { dType: 'Float32', name: '-Im(Zwe-ce)', unit: 'Ω' },
  0x1b2: { dType: 'Float32', name: '(Q-Qo)', unit: 'C' },
  0x1b3: { dType: 'Float32', name: 'dQ', unit: 'C' },
  0x1b9: { dType: 'Float32', name: '<Ece>', unit: 'V' },
  0x1ce: { dType: 'Float32', name: 'Temperature', unit: '°C' },
  0x1d3: { dType: 'Float64', name: 'Q charge/discharge', unit: 'mA·h' },
  0x1d4: { dType: 'Uint32', name: 'half cycle', unit: '' },
  0x1d5: { dType: 'Uint32', name: 'z cycle', unit: '' },
  0x1d7: { dType: 'Float32', name: '<Ece>', unit: 'V' },
  0x1d9: { dType: 'Float32', name: 'THD Ewe', unit: '%' },
  0x1da: { dType: 'Float32', name: 'THD I', unit: '%' },
  0x1dc: { dType: 'Float32', name: 'NSD Ewe', unit: '%' },
  0x1dd: { dType: 'Float32', name: 'NSD I', unit: '%' },
  0x1df: { dType: 'Float32', name: 'NSR Ewe', unit: '%' },
  0x1e0: { dType: 'Float32', name: 'NSR I', unit: '%' },
  0x1e6: { dType: 'Float32', name: '|Ewe h2|', unit: 'V' },
  0x1e7: { dType: 'Float32', name: '|Ewe h3|', unit: 'V' },
  0x1e8: { dType: 'Float32', name: '|Ewe h4|', unit: 'V' },
  0x1e9: { dType: 'Float32', name: '|Ewe h5|', unit: 'V' },
  0x1ea: { dType: 'Float32', name: '|Ewe h6|', unit: 'V' },
  0x1eb: { dType: 'Float32', name: '|Ewe h7|', unit: 'V' },
  0x1ec: { dType: 'Float32', name: '|I h2|', unit: 'A' },
  0x1ed: { dType: 'Float32', name: '|I h3|', unit: 'A' },
  0x1ee: { dType: 'Float32', name: '|I h4|', unit: 'A' },
  0x1ef: { dType: 'Float32', name: '|I h5|', unit: 'A' },
  0x1f0: { dType: 'Float32', name: '|I h6|', unit: 'A' },
  0x1f1: { dType: 'Float32', name: '|I h7|', unit: 'A' },
  0x1f2: { dType: 'Float32', name: '|Ece h2|', unit: 'V' }, //-->Added f2 to f7 (not sure why they were missing.)
  0x1f3: { dType: 'Float32', name: '|Ece h7|', unit: 'V' },
  0x1f4: { dType: 'Float32', name: '|Ece h7|', unit: 'V' },
  0x1f5: { dType: 'Float32', name: '|Ece h7|', unit: 'V' },
  0x1f6: { dType: 'Float32', name: '|Ece h7|', unit: 'V' },
  0x1f7: { dType: 'Float32', name: '|Ece h7|', unit: 'V' },
};

/**
interface DataColumnsByName {
  [columnNameFromMPT: string]: { mprName: string };
}
 * Map MPT to same MPR Type, plus add units and more concise names
 * the units will be taken from the original MPT file, and it may help
 * to spot any errors in MPR.
export const dataColumnsByName: DataColumnsByName = {
  'time/s': { unit: 's', mprName: 'time' },
  'control_V/I': { mprName: 'control_V/I' },
  'Ewe/V': { unit: 'V', mprName: 'Ewe' },
  dq: { mprName: 'dq' },
  'I/mA': { unit: 'mA', mprName: 'I' },
  Ece: { mprName: 'Ece' },
  '<I>': { mprName: '<I>' },
  '(Q-Qo)': { mprName: '(Q-Qo)' },
  'Analog IN 1': { mprName: 'Analog IN 1' },
  'Analog IN 2': { mprName: 'Analog IN 2' },
  control_V: { mprName: 'control_V' },
  'control/mA': { mprName: 'control_I' },
  dQ: { mprName: 'dQ' },
  'cycle number': { mprName: 'cycle number' },
  freq: { mprName: 'freq' },
  '|Ewe|': { mprName: '|Ewe|' },
  '|I|': { mprName: '|I|' },
  'Phase(Z)': { mprName: 'Phase(Z)' },
  '|Z|': { mprName: '|Z|' },
  'Re(Z)': { mprName: 'Re(Z)' },
  '-Im(Z)': { mprName: '-Im(Z)' },
  'I Range': { mprName: 'I Range' },
  P: { mprName: 'P' },
  Energy: { mprName: 'Energy' },
  'Analog OUT': { mprName: 'Analog OUT' },
  '<Ewe>': { mprName: '<Ewe>' },
  'Cs⁻²': { mprName: 'Cs⁻²' },
  '|Ece|': { mprName: '|Ece|' },
  'Phase(Zce)': { mprName: 'Phase(Zce)' },
  '|Zce|': { mprName: '|Zce|' },
  'Re(Zce)': { mprName: 'Re(Zce)' },
  '-Im(Zce)': { mprName: '-Im(Zce)' },
  'Energy charge': { mprName: 'Energy charge' },
  'Energy discharge': { mprName: 'Energy discharge' },
  'Capacitance charge': { mprName: 'Capacitance charge' },
  'Capacitance discharge': { mprName: 'Capacitance discharge' },
  Ns: { mprName: 'Ns' },
  '|Estack|': { mprName: '|Estack|' },
  Rcmp: { mprName: 'Rcmp' },
  Cs: { mprName: 'Cs' },
  Cp: { mprName: 'Cp' },
  'Cp⁻²': { mprName: 'Cp⁻²' },
  '|E1|': { mprName: '|E1|' },
  '|E2|': { mprName: '|E2|' },
  'Phase(Z1)': { mprName: 'Phase(Z1)' },
  'Phase(Z2)': { mprName: 'Phase(Z2)' },
  '|Z1|': { mprName: '|Z1|' },
  '|Z2|': { mprName: '|Z2|' },
  'Re(Z1)': { mprName: 'Re(Z1)' },
  'Re(Z2)': { mprName: 'Re(Z2)' },
  '-Im(Z1)': { mprName: '-Im(Z1)' },
  '-Im(Z2)': { mprName: '-Im(Z2)' },
  '<E1>': { mprName: '<E1>' },
  '<E2>': { mprName: '<E2>' },
  'Phase(Zstack)': { mprName: 'Phase(Zstack)' },
  '|Zstack|': { mprName: '|Zstack|' },
  'Re(Zstack)': { mprName: 'Re(Zstack)' },
  '-Im(Zstack)': { mprName: '-Im(Zstack)' },
  '<Estack>': { mprName: '<Estack>' },
  'Phase(Zwe-ce)': { mprName: 'Phase(Zwe-ce)' },
  '|Zwe-ce|': { mprName: '|Zwe-ce|' },
  'Re(Zwe-ce)': { mprName: 'Re(Zwe-ce)' },
  '-Im(Zwe-ce)': { mprName: '-Im(Zwe-ce)' },
  '<Ece>': { mprName: '<Ece>' },
  Temperature: { mprName: 'Temperature' },
  'Q charge/discharge': { mprName: 'Q charge/discharge' },
  'half cycle': { mprName: 'half cycle' },
  'z cycle': { mprName: 'z cycle' },
  'THD Ewe': { mprName: 'THD Ewe' },
  'THD I': { mprName: 'THD I' },
  'NSD Ewe': { mprName: 'NSD Ewe' },
  'NSD I': { mprName: 'NSD I' },
  'NSR Ewe': { mprName: 'NSR Ewe' },
  'NSR I': { mprName: 'NSR I' },
  '|Ewe h2|': { mprName: '|Ewe h2|' },
  '|Ewe h3|': { mprName: '|Ewe h3|' },
  '|Ewe h4|': { mprName: '|Ewe h4|' },
  '|Ewe h5|': { mprName: '|Ewe h5|' },
  '|Ewe h6|': { mprName: '|Ewe h6|' },
  '|Ewe h7|': { mprName: '|Ewe h7|' },
  '|I h2|': { mprName: '|I h2|' },
  '|I h3|': { mprName: '|I h3|' },
  '|I h4|': { mprName: '|I h4|' },
  '|I h5|': { mprName: '|I h5|' },
  '|I h6|': { mprName: '|I h6|' },
  '|I h7|': { mprName: '|I h7|' },
  '|Ece h2|': { mprName: '|Ece h2|' },
  '|Ece h7|': { mprName: '|Ece h7|' },
};
*/
