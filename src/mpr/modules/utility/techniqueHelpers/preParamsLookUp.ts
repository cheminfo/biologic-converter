/**
 * parameters for each currently parsed technique (several not implemented.)
 */

export type ArraySS = [string, string][];
type ParamsLookUp = Record<string, ArraySS>;

export const preParamsLookUp: ParamsLookUp = {
  caParams: [
    ['Ei', 'Float32'],
    ['Ei_vs', 'Uint8'],
    ['ti', 'Float32'],
    ['Imax', 'Float32'],
    ['Imax_unit', 'Uint8'],
    ['Imin', 'Float32'],
    ['Imin_unit', 'Uint8'],
    ['dQM', 'Float32'],
    ['dQM_unit', 'Uint8'],
    ['record', 'Uint8'],
    ['dI', 'Float32'],
    ['dI_unit', 'Uint8'],
    ['dQ', 'Float32'],
    ['dQ_unit', 'Uint8'],
    ['dt', 'Float32'],
    ['dta', 'Float32'],
    ['E_range_min', 'Float32'],
    ['E_range_max', 'Float32'],
    ['I_range', 'Uint8'],
    ['I_range_min', 'Uint8'],
    ['I_range_max', 'Uint8'],
    ['I_range_init', 'Uint8'],
    ['bandwidth', 'Uint8'],
    ['goto_Ns', 'Uint32'],
    ['nc_cycles', 'Uint32'],
  ],
  cpParams: [
    ['Is', 'Float32'],
    ['Is_unit', 'Uint8'],
    ['Is_vs', 'Uint8'],
    ['ts', 'Float32'],
    ['EM', 'Float32'],
    ['dQM', 'Float32'],
    ['dQM_unit', 'Uint8'],
    ['record', 'Uint8'],
    ['dEs', 'Float32'],
    ['dts', 'Float32'],
    ['E_range_min', 'Float32'],
    ['E_range_max', 'Float32'],
    ['I_range', 'Uint8'],
    ['bandwidth', 'Uint8'],
    ['goto_Ns', 'Uint32'],
    ['nc_cycles', 'Uint32'],
  ],
  cvParams: [
    ['Ei', 'Float32'],
    ['Ei_vs', 'Uint8'],
    ['dE/dt', 'Float32'],
    ['dE/dt_unit', 'Uint8'],
    ['E1', 'Float32'],
    ['E1_vs', 'Uint8'],
    ['step_percent', 'Uint8'],
    ['N', 'Uint32'],
    ['E_range_min', 'Float32'],
    ['E_range_max', 'Float32'],
    ['I_range', 'Uint8'],
    ['I_range_min', 'Uint8'],
    ['I_range_max', 'Uint8'],
    ['I_range_init', 'Uint8'],
    ['bandwidth', 'Uint8'],
    ['E2', 'Float32'],
    ['E2_vs', 'Uint8'],
    ['nc_cycles', 'Uint32'],
    ['reverse_scan', 'Uint8'],
    ['Ef', 'Float32'],
    ['Ef_vs', 'Uint8'],
  ],
  gcplParams: [
    ['set_I/C', 'Uint8'],
    ['Is', 'Float32'],
    ['Is_unit', 'Uint8'],
    ['Is_vs', 'Uint8'],
    ['N', 'Float32'],
    ['I_sign', 'Uint8'],
    ['t1', 'Float32'],
    ['I_range', 'Uint8'],
    ['bandwidth', 'Uint8'],
    ['dE1', 'Float32'],
    ['dt1', 'Float32'],
    ['EM', 'Float32'],
    ['tM', 'Float32'],
    ['Im', 'Float32'],
    ['Im_unit', 'Uint8'],
    ['dI/dt', 'Float32'],
    ['dI/dt_unit', 'Uint8'],
    ['E_range_min', 'Float32'],
    ['E_range_max', 'Float32'],
    ['dq', 'Float32'],
    ['dq_unit', 'Uint8'],
    ['dtq', 'Float32'],
    ['dQM', 'Float32'],
    ['dQM_unit', 'Uint8'],
    ['dxM', 'Float32'],
    ['tR', 'Float32'],
    ['dER/dt', 'Float32'],
    ['dER', 'Float32'],
    ['dtR', 'Float32'],
    ['EL', 'Float32'],
    ['goto_Ns', 'Uint32'],
    ['nc_cycles', 'Uint32'],
  ],
  lsvParams: [
    ['tR', 'Float32'],
    ['dER/dt', 'Float32'],
    ['dER', 'Float32'],
    ['dtR', 'Float32'],
    ['dE/dt', 'Float32'],
    ['dE/dt_unit', 'Uint8'],
    ['Ei', 'Float32'],
    ['Ei_vs', 'Uint8'],
    ['EL', 'Float32'],
    ['EL_vs', 'Uint8'],
    ['record', 'Uint8'],
    ['dI', 'Float32'],
    ['dI_unit', 'Uint8'],
    ['tI', 'Float32'],
    ['step_percent', 'Uint8'],
    ['N', 'Uint32'],
    ['E_range_min', 'Float32'],
    ['E_range_max', 'Float32'],
    ['I_range', 'Uint8'],
    ['I_range_min', 'Uint8'],
    ['I_range_max', 'Uint8'],
    ['I_range_init', 'Uint8'],
    ['bandwidth', 'Uint8'],
  ],
  waitParams: [
    ['select', 'Uint8'],
    ['td', 'Uint32'],
    ['from', 'Uint8'],
    ['tech_num', 'Uint8'],
    ['ole_date', 'Float32'],
    ['ole_time', 'Float32'],
    ['record', 'Uint8'],
    ['dE', 'Float32'],
    ['dI', 'Float32'],
    ['dI_unit', 'Uint8'],
    ['dt', 'Float32'],
  ],
  zirParams: [
    ['E', 'Float32'],
    ['E_vs', 'Uint8'],
    ['f', 'Float32'],
    ['f_unit', 'Uint8'],
    ['Va', 'Float32'],
    ['pw', 'Float32'],
    ['Na', 'Uint32'],
    ['E_range_min', 'Float32'],
    ['E_range_max', 'Float32'],
    ['I_range', 'Uint8'],
    ['bandwidth', 'Uint8'],
    ['comp_level', 'Uint8'],
    ['use_results', 'Uint8'],
    ['comp_mode', 'Uint8'],
  ],
};
